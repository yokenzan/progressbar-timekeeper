<Window x:Class="RemMeter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:RemMeter.Properties"
        xmlns:converters="clr-namespace:RemMeter.Converters"
        mc:Ignorable="d"
        Title="{Binding Source={x:Static properties:Resources.AppTitle}}" Height="350" Width="450"
        WindowStartupLocation="CenterScreen"
        Icon="tv_timekeeper_trimmed.ico">
    <Window.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
        <Style x:Key="PositionRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <TextBlock x:Name="PART_TextBlock" Text="{TemplateBinding Content}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="PART_TextBlock" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="{StaticResource DangerBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Style="{StaticResource MainStackPanelStyle}">
            <TextBlock Text="{Binding Source={x:Static properties:Resources.TimeSetting}}" Style="{StaticResource LabelTextStyle}"/>
            <TextBox Text="{Binding TimeInput, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InputTextBoxStyle}"/>

            <ItemsControl ItemsSource="{Binding QuickTimeLabels}" HorizontalAlignment="Center" Margin="0,5,0,10">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding}"
                                Command="{Binding DataContext.SetQuickTimeCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}"
                                Style="{StaticResource QuickTimeButtonStyle}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <TextBlock Text="{Binding Source={x:Static properties:Resources.DisplayMonitor}}" Style="{StaticResource LabelTextStyle}"/>
            <ComboBox ItemsSource="{Binding Displays}"
                      SelectedItem="{Binding SelectedDisplay}"
                      DisplayMemberPath="DisplayName"
                      Style="{StaticResource ComboBoxStyle}"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                <TextBlock Text="{Binding Source={x:Static properties:Resources.Position}}" Style="{StaticResource LabelTextStyle}"/>
                <StackPanel Orientation="Horizontal">
                    <RadioButton GroupName="Position" Content="{Binding Source={x:Static properties:Resources.PositionRight}}"
                                 IsChecked="{Binding SelectedPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Right}"
                                 Style="{StaticResource PositionRadioButtonStyle}"/>
                    <RadioButton GroupName="Position" Content="{Binding Source={x:Static properties:Resources.PositionLeft}}"
                                 IsChecked="{Binding SelectedPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Left}"
                                 Style="{StaticResource PositionRadioButtonStyle}"/>
                    <RadioButton GroupName="Position" Content="{Binding Source={x:Static properties:Resources.PositionTop}}"
                                 IsChecked="{Binding SelectedPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Top}"
                                 Style="{StaticResource PositionRadioButtonStyle}"/>
                    <RadioButton GroupName="Position" Content="{Binding Source={x:Static properties:Resources.PositionBottom}}"
                                 IsChecked="{Binding SelectedPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Bottom}"
                                 Style="{StaticResource PositionRadioButtonStyle}" Margin="5,0,0,0"/>
                </StackPanel>
            </StackPanel>

            <CheckBox Content="{Binding Source={x:Static properties:Resources.RememberMySettings}}"
                      IsChecked="{Binding RememberLastSettings}"
                      HorizontalAlignment="Center"
                      Margin="0,0,0,10"/>

            <Button Content="{Binding Source={x:Static properties:Resources.Start}}" Command="{Binding StartTimerCommand}" Style="{StaticResource PrimaryButtonStyle}"/>
        </StackPanel>
    </Grid>
</Window>