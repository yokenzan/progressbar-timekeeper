name: Release

on:
  push:
    branches: [master]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build binaries
      id: build
      run: |
        # Get current version for build
        CURRENT_VERSION=$(grep -oP '(?<=<VersionPrefix>)[^<]+' Directory.Build.props)
        echo "Building version: $CURRENT_VERSION"
        
        # Build Framework-dependent binaries
        dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained false --output ./build/framework-dependent/win-x64 --property:PublishSingleFile=true
        dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained false --output ./build/framework-dependent/win-x86 --property:PublishSingleFile=true
        
        # Build Self-contained binaries  
        dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained true --output ./build/self-contained/win-x64 --property:PublishSingleFile=true --property:PublishTrimmed=false
        dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained true --output ./build/self-contained/win-x86 --property:PublishSingleFile=true --property:PublishTrimmed=false
        
    - name: Prepare release assets
      run: |
        # This script will be called by semantic-release with the new version
        cat > prepare-release.sh << 'EOF'
        #!/bin/bash
        VERSION=$1
        echo "Preparing release assets for version: $VERSION"
        
        mkdir -p release
        
        # Copy and rename with version
        cp "./build/framework-dependent/win-x64/RemMeter.exe" "./release/RemMeter-${VERSION}-framework-dependent-win-x64.exe"
        cp "./build/framework-dependent/win-x86/RemMeter.exe" "./release/RemMeter-${VERSION}-framework-dependent-win-x86.exe"  
        cp "./build/self-contained/win-x64/RemMeter.exe" "./release/RemMeter-${VERSION}-self-contained-win-x64.exe"
        cp "./build/self-contained/win-x86/RemMeter.exe" "./release/RemMeter-${VERSION}-self-contained-win-x86.exe"
        
        echo "Release files prepared:"
        ls -la ./release/
        EOF
        
        chmod +x prepare-release.sh
        
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Run semantic-release with custom prepare step
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["master"],
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            [
              "@semantic-release/changelog",
              {
                "changelogFile": "CHANGELOG.md"
              }
            ],
            [
              "@semantic-release/exec",
              {
                "prepareCmd": "sed -i 's/<VersionPrefix>[^<]*<\\/VersionPrefix>/<VersionPrefix>${nextRelease.version}<\\/VersionPrefix>/' Directory.Build.props && ./prepare-release.sh ${nextRelease.version}"
              }
            ],
            [
              "@semantic-release/github",
              {
                "assets": [
                  {
                    "path": "release/RemMeter-${nextRelease.version}-framework-dependent-win-x64.exe",
                    "label": "RemMeter v${nextRelease.version} - Framework-dependent Windows x64"
                  },
                  {
                    "path": "release/RemMeter-${nextRelease.version}-framework-dependent-win-x86.exe", 
                    "label": "RemMeter v${nextRelease.version} - Framework-dependent Windows x86"
                  },
                  {
                    "path": "release/RemMeter-${nextRelease.version}-self-contained-win-x64.exe",
                    "label": "RemMeter v${nextRelease.version} - Self-contained Windows x64"
                  },
                  {
                    "path": "release/RemMeter-${nextRelease.version}-self-contained-win-x86.exe",
                    "label": "RemMeter v${nextRelease.version} - Self-contained Windows x86"
                  }
                ],
                "releaseBodyTemplate": "## RemMeter v${nextRelease.version}\n\n### üì• Installation\n\nDownload the appropriate version for your system:\n\n#### üéØ Framework-dependent (Recommended - Smaller size ~5-10MB)\n- **RemMeter-${nextRelease.version}-framework-dependent-win-x64.exe** - 64-bit Windows\n- **RemMeter-${nextRelease.version}-framework-dependent-win-x86.exe** - 32-bit Windows\n\n‚ö†Ô∏è **Requires**: .NET 8.0 Desktop Runtime ([Download](https://dotnet.microsoft.com/download/dotnet/8.0))\n\n#### üîß Self-contained (Larger size ~80-120MB, no runtime required)\n- **RemMeter-${nextRelease.version}-self-contained-win-x64.exe** - 64-bit Windows\n- **RemMeter-${nextRelease.version}-self-contained-win-x86.exe** - 32-bit Windows\n\n‚úÖ **No .NET runtime required** - runs on any Windows PC\n\n### üíª System Requirements\n- Windows 10/11\n- Framework-dependent: .NET 8.0 Desktop Runtime\n- Self-contained: No additional software required\n\n---\n\n### üîÑ Changes\n\n${nextRelease.notes}"
              }
            ],
            [
              "@semantic-release/git",
              {
                "assets": ["Directory.Build.props", "CHANGELOG.md"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }
            ]
          ]
        }
        EOF
        
        npx semantic-release