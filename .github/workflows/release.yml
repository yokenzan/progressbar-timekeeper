name: Build and Release

on:
  push:
    branches: [master]
    tags: ['v*']

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    uses: ./.github/workflows/build.yml

  publish-latest:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./release
          
      - name: Create release assets
        run: |
          mkdir -p ./assets
          cp "./release/framework-dependent/win-x64/RemMeter.exe" "./assets/RemMeter-framework-dependent-win-x64.exe"
          cp "./release/framework-dependent/win-x86/RemMeter.exe" "./assets/RemMeter-framework-dependent-win-x86.exe"
          cp "./release/self-contained/win-x64/RemMeter.exe" "./assets/RemMeter-self-contained-win-x64.exe"
          cp "./release/self-contained/win-x86/RemMeter.exe" "./assets/RemMeter-self-contained-win-x86.exe"
          
      - name: Delete previous latest release
        run: |
          if gh release view latest >/dev/null 2>&1; then
            echo "Deleting existing latest release..."
            gh release delete latest --yes --cleanup-tag
          else
            echo "No previous latest release found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "Latest Build"
          body: |
            Latest build from master branch.
            
            **Framework-dependent** (requires .NET 8.0 Runtime):
            - RemMeter-framework-dependent-win-x64.exe (64-bit)
            - RemMeter-framework-dependent-win-x86.exe (32-bit)
            
            **Self-contained** (no runtime required):
            - RemMeter-self-contained-win-x64.exe (64-bit)  
            - RemMeter-self-contained-win-x86.exe (32-bit)
          files: |
            ./assets/RemMeter-framework-dependent-win-x64.exe
            ./assets/RemMeter-framework-dependent-win-x86.exe
            ./assets/RemMeter-self-contained-win-x64.exe
            ./assets/RemMeter-self-contained-win-x86.exe
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-tagged:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./release
          
      - name: Create versioned release assets
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          mkdir -p ./assets
          cp "./release/framework-dependent/win-x64/RemMeter.exe" "./assets/RemMeter-${VERSION}-framework-dependent-win-x64.exe"
          cp "./release/framework-dependent/win-x86/RemMeter.exe" "./assets/RemMeter-${VERSION}-framework-dependent-win-x86.exe"
          cp "./release/self-contained/win-x64/RemMeter.exe" "./assets/RemMeter-${VERSION}-self-contained-win-x64.exe"
          cp "./release/self-contained/win-x86/RemMeter.exe" "./assets/RemMeter-${VERSION}-self-contained-win-x86.exe"
          
      - name: Create Tagged Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./assets/RemMeter-${{ steps.get_version.outputs.version }}-framework-dependent-win-x64.exe
            ./assets/RemMeter-${{ steps.get_version.outputs.version }}-framework-dependent-win-x86.exe
            ./assets/RemMeter-${{ steps.get_version.outputs.version }}-self-contained-win-x64.exe
            ./assets/RemMeter-${{ steps.get_version.outputs.version }}-self-contained-win-x86.exe
          name: RemMeter ${{ github.ref_name }}
          body: |
            **Framework-dependent** (requires .NET 8.0 Runtime):
            - RemMeter-framework-dependent-win-x64.exe (64-bit)
            - RemMeter-framework-dependent-win-x86.exe (32-bit)
            
            **Self-contained** (no runtime required):
            - RemMeter-self-contained-win-x64.exe (64-bit)
            - RemMeter-self-contained-win-x86.exe (32-bit)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-versioned:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release